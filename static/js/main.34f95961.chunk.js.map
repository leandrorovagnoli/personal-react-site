{"version":3,"sources":["assets/user.jpg","components/IntroSection/UserPic/UserPic.jsx","components/IntroSection/SocialProfiles/SocialProfiles.jsx","components/IntroSection/Intro/Intro.jsx","components/IntroSection/IntroSection.jsx","components/SkillsSection/SkillsSection.jsx","components/Section/Section.jsx","UserDetails.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","UserPic","props","className","src","image","alt","github","target","rel","href","facebook","linkedin","Fragment","name","titles","map","title","index","length","resumeEnglishLink","resumePortugueseLink","user","Section","pic","SocialProfiles","socialProfiles","Intro","skills","languages","skill","stack1","stack2","deployment","versionControl","methodologies","children","App","IntroSection","User","SkillsSection","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.34f95961.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.81a88614.jpg\";","import React from 'react';\r\nimport './styles.css';\r\n\r\n\r\nconst UserPic = (props) => {\r\n    return (\r\n        <div className=\"pic-container center-middle\">\r\n            <img src={props.image} alt='pro-pic' className=\"profile-pic\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPic;","import React from 'react';\r\nimport './styles.css'\r\n\r\n\r\nexport default (props) =>\r\n    <div className=\"center-middle\">\r\n        {\r\n            props.github && \r\n            <a className=\"icon\" target=\"_blank\" rel=\"noopener noreferrer\" href={props.github}>\r\n                <i className=\"fab fa-github\"></i>\r\n            </a>\r\n        }\r\n        {\r\n            props.facebook &&\r\n            <a className=\"icon\" target=\"_blank\" rel=\"noopener noreferrer\" href={props.facebook}>\r\n                <i className=\"fab fa-facebook\"></i>\r\n            </a>\r\n        }\r\n        {\r\n            props.linkedin &&\r\n            <a className=\"icon\" target=\"_blank\" rel=\"noopener noreferrer\" href={props.linkedin}>\r\n                <i className=\"fab fa-linkedin\"></i>\r\n            </a>\r\n        }\r\n    </div>","import React from 'react';\r\nimport './styles.css';\r\n\r\n\r\nexport default (props) =>\r\n    (\r\n        <React.Fragment>\r\n            <div className='center-middle flex-column'>\r\n                <h1 className=\"font-cursive main-heading big\">Hello, I'm {props.name}</h1>\r\n                <h3 className=\"font-mono sub\">\r\n                    {\r\n                        props.titles.map((title, index) =>\r\n                            props.titles.length - 1 === index ? title : title + ' | '\r\n                        )\r\n                    }\r\n                </h3>\r\n            </div>\r\n            <div className=\"center-middle btn-container\">\r\n                <a className=\"btn-link\" href={props.resumeEnglishLink}\r\n                    target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <button className=\"download-button font-mono\">Download Resume (English)</button>\r\n                </a>\r\n                <a className=\"btn-link\" href={props.resumePortugueseLink}\r\n                    target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <button className=\"download-button font-mono\">Download Resume (Portuguese)</button>\r\n                </a>\r\n            </div>\r\n        </React.Fragment>\r\n    )","import React from 'react';\r\nimport { Section } from '..';\r\nimport UserPic from './UserPic/UserPic';\r\nimport SocialProfiles from './SocialProfiles/SocialProfiles';\r\nimport Intro from './Intro/Intro';\r\n\r\n\r\nexport default (props) => {\r\n    const { user } = props;\r\n    return (\r\n        <Section>\r\n            <UserPic image={user.pic} />\r\n            <SocialProfiles {...user.socialProfiles} />\r\n            <Intro {...user} />\r\n        </Section>\r\n    )\r\n}","import React from 'react';\r\nimport { Section } from '..';\r\nimport './styles.css'\r\n\r\nexport default (props) =>\r\n    <Section>\r\n        <h1 className='font-cursive center'>Skills</h1>\r\n        <div className='skills-container center-middle'>\r\n            {\r\n                props.skills.languages.map(skill =>\r\n                    <div className='skill'>\r\n                        {\r\n                            skill\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n        <div className='skills-container center-middle'>\r\n            {\r\n                props.skills.stack1.map(skill =>\r\n                    <div className='skill'>\r\n                        {\r\n                            skill\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n        <div className='skills-container center-middle'>\r\n            {\r\n                props.skills.stack2.map(skill =>\r\n                    <div className='skill'>\r\n                        {\r\n                            skill\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n        <div className='skills-container center-middle'>\r\n            {\r\n                props.skills.deployment.map(skill =>\r\n                    <div className='skill'>\r\n                        {\r\n                            skill\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n        <div className='skills-container center-middle'>\r\n            {\r\n                props.skills.versionControl.map(skill =>\r\n                    <div className='skill'>\r\n                        {\r\n                            skill\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n        <div className='skills-container center-middle'>\r\n            {\r\n                props.skills.methodologies.map(skill =>\r\n                    <div className='skill'>\r\n                        {\r\n                            skill\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    </Section>","import React from 'react';\r\nimport './styles.css';\r\n\r\n\r\nexport default (props) => {\r\n    return (\r\n        <div className='section'>\r\n            {\r\n                props.children\r\n            }\r\n        </div>\r\n    )\r\n}","import image from './assets/user.jpg'\r\n\r\nexport default {\r\n    pic: image,\r\n    name: 'Leandro Rovagnoli',\r\n    titles: ['Software Developer', 'Web Dev', 'Agilist', 'SEO and Automation Enthusiast'],\r\n    socialProfiles: {\r\n        github: 'https://github.com/leandrorovagnoli',\r\n        linkedin: 'https://linkedin.com/in/leandro-rovagnoli',\r\n        facebook: 'https://facebook.com/leandro.f.rovagnoli'\r\n    },\r\n    resumeEnglishLink: 'Files/CV-Leandro-Rovagnoli-EN.pdf',\r\n    resumePortugueseLink: 'Files/CV-Leandro-Rovagnoli-PT.pdf',\r\n    // projects: [\r\n    //     {\r\n    //         image: 'https://images.idgesg.net/images/article/2018/10/ai_artificial-intelligence_circuit-board_circuitry_mother-board_nodes_computer-chips-100777423-large.jpg',\r\n    //         title: 'ATM Theft detection',\r\n    //         date: 'April 2018',\r\n    //         description: 'Developed a Deep Learning Neural Network for audio classification to identify threats in ATMs as part of the Smart India Hackathon 2018'\r\n    //     },\r\n    //     {\r\n    //         image: 'https://490z7i45htbb1f4tty9mdpi6-wpengine.netdna-ssl.com/wp-content/uploads/2017/11/AI-governance-lead.jpg?resolution=1366,1',\r\n    //         title: 'Issue Tracking System',\r\n    //         date: 'April 2018',\r\n    //         description: 'Developed an Ticket based Issue tracking system using Django Backend for Sophisticated Instrumentation & Computation Center, Kerala University'\r\n    //     }\r\n    // ],\r\n    skills: {\r\n        languages: ['C#', 'Javascript', 'HTML', 'CSS'],\r\n        stack1: ['ASP.NET', '.NET CORE', 'MVC', 'Entity Framework'],\r\n        stack2: ['NodeJS', 'React', 'React Native', 'Expo'],\r\n        deployment: ['Heroku', 'Amazon Cloud EC2'],\r\n        versionControl: ['GIT', 'TortoiseSVN'],\r\n        methodologies: ['SCRUM', 'Kanban', 'XP']\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport { IntroSection, ProjectsSection, SkillsSection } from './components';\r\nimport User from './UserDetails';\r\nimport './assets/styles.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <IntroSection user={User} />\r\n        {/* <ProjectsSection projects={User.projects} /> */}\r\n        <SkillsSection skills={User.skills} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}